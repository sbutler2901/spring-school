buildscript {
  ext {
    springBootVersion = '2.0.2.RELEASE'
  }
  repositories {
          //mavenCentral()
          jcenter()
  }
  dependencies {
          classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
          classpath "com.bmuschko:gradle-docker-plugin:3.2.8"
  }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.bmuschko.docker-remote-api'

group = 'me.sbsoftware'
version = '0.1.0'
sourceCompatibility = 1.8

/*repositories {
  mavenCentral()
}*/
dependencies {
        // Spring
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web') 
	testCompile('org.springframework.boot:spring-boot-starter-test')

	//compile('org.springframework.boot:spring-boot-starter-security')
	//testCompile('org.springframework.security:spring-security-test')
       
        // Database 
        // for testing with persistent non-docker mariadb
        compile("org.mariadb.jdbc:mariadb-java-client:2.2.4")   
        // for testing with embedded db
	//runtime('com.h2database:h2')
}

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage
import com.bmuschko.gradle.docker.DockerRegistryCredentials

task buildImage(type: DockerBuildImage) {
  dependsOn build
  tag = "sbutler2901/spring-school:${project.version}"
  inputDir = projectDir
}
task pushImage(type: DockerPushImage) {
  imageName = "sbutler2901/spring-school"
  tag = "${project.version}"
  registryCredentials = new DockerRegistryCredentials()
  registryCredentials.username = "sbutler2901"
  registryCredentials.password = "$System.env.DOCKERHUB_PASS"
}
